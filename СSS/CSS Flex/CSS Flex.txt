! FLEX

	Для контейнера
---------------------------------------------------------------------------------------------------------------------------------
		Display:				-	включает flex свойство для элемента. Под это свойство попадает сам элемент и вложенные в него 
									элементы: затрагиваются только потомки первого уровня - они станут элементами flex контейнера

			flex;				-	элемент растягивается на всю ширину и имеет свое полное пространство среди окружающих блоков. 
									Происходит перенос строк в начале и в конце блока.
			inline-flex;		-	элемент обтекается другими элементами. При этом его внутренняя часть форматируется как блочный 
									элемент, а сам элемент — как встроенный.
---------------------------------------------------------------------------------------------------------------------------------
		Flex-direction:			-	Изменяет направление главной оси контейнера. Поперечная ось меняется соответственно.

			row;				-	направление элементов слева направо (→)
			row-reverse;		-	направление элементов сверху вниз (↓)
			column; 			-	направление элементов справа налево (←)
			column-reverse;		-	направление элементов снизу вверх (↑)
---------------------------------------------------------------------------------------------------------------------------------
		Flex-wrap:				-	Управляет переносом непомещающихся в контейнер элементов.

			nowrap;				-	вложенные элементы располагаются в один ряд (при direction=row) или в одну колонку 
									(при direction=column)
			wrap;				-	включает перенос элементов на следующий ряд, если они не помещаются в контейнер. 
									Так включается движение элементов по поперечной оси.
			wrap-reverse;		-	тоже что wrap только перенос будет не вниз, а вверх (в обратном направлении)
---------------------------------------------------------------------------------------------------------------------------------
		Flex-flow: 				- 	Объединяет оба свойства flex-direction и flex-wrap. Они часто используются вместе, поэтому 
									чтобы писать меньше кода было создано свойство flex-flow.
---------------------------------------------------------------------------------------------------------------------------------
		Justify-content:		-	Выравнивает элементы по основной оси: если direction=row, то по горизонтали, а если 
									direction=column, то по вертикали. Оно помогает распределить оставшееся свободное 
									пространство, в случаях, если все flex-элементы в строке негибкие, или гибкие, но достигли
									 своего максимального размера.

			flex-start;			-	элементы будут идти с начала (в конце может остаться место).
			flex-end; 			-	элементы выравниваются по концу (место останется в начале
			center; 			-	center - по центру (место останется слева и права)
			space-between; 		-	крайние элементы прижимаются к краям (место между элементами распределяется равномерно)
			space-around; 		-	свободное пространство равномерно распределяется между элементами (крайние элементы не 
									прижимаются к краям). Пространство между краем контейнера и крайними элементами будет в 
									два раза меньше чем пространство между элементами в середине ряда.
			space-evenly;		-	тоже что space-around, только расстояние у крайних элементов до краев контейнера такое же 
									как и между элементами.
---------------------------------------------------------------------------------------------------------------------------------
		Align-items:			-	Выравнивает ряды, в которых находятся элементы по поперечной оси. То же что justify-content 
									только для противоположной оси.
			stretch; (default) 	-	ряды растягиваются заполняя строку полностью
			flex-start; 		-	ряды группируются в верхней части контейнера (в конце может остаться место).
			flex-end; 			-	ряды группируются в нижней части контейнера (место останется в начале)
			center; 			-	ряды группируются по центру контейнера (место останется по краям)
			between;			-	крайние ряды прижимаются к краям (место между рядами распределяется равномерно)
---------------------------------------------------------------------------------------------------------------------------------
		Align-content:			-	Свойство align-content выравнивает строки flex-контейнера во flex-контейнере, когда есть 
									дополнительное пространство по поперечной оси, подобно тому, как justify-content выравнивает 
									отдельные элементы по главной оси. Это свойство мало где нужно и вместо него чаще 
									используется align-items
			stretch (default); 	- 	ряды растягиваются заполняя строку полностью
			flex-start; 		- 	ряды группируются в верхней части контейнера (в конце может остаться место).
			flex-end;			- 	ряды группируются в нижней части контейнера (место останется в начале)
			center; 			- 	ряды группируются по центру контейнера (место останется по краям)
			space-between; 		- 	крайние ряды прижимаются к краям (место между рядами распределяется равномерно)
			space-around; 		- 	свободное пространство равномерно распределяется между рядами (крайние элементы не прижимаются 
									к краям). Пространство между краем контейнера и крайними элементами будет в два раза меньше 
									чем пространство между элементами в середине ряда.
			space-evenly 		- 	тоже что space-around, только расстояние у крайних элементов до краев контейнера такое же как 
									и между элементами.
---------------------------------------------------------------------------------------------------------------------------------

	Для элементов контейнера

---------------------------------------------------------------------------------------------------------------------------------
		Flex: {grow shrink basis}-	Короткая запись трех свойств: flex-grow flex-shrink flex-basis.

			flex-grow:			-	Задает коэффициент увеличения элемента при наличии свободного места в контейнере. По 
								умолчанию flex-grow: 0 т.е. никакой из элементов не должен увеличиваться и заполнять 
								свободное место в контейнере.
			flex-shrink:		- 	Задает коэффициент уменьшения элемента. Свойство противоположное flex-grow и определяет как 
								элемент должен сжиматься, если в контейнере не остается свободного места. Т.е. свойство 
								начинает работать, когда сумма размеров всех элементов больше чем размер контейнера.
			flex-basis:			-	Устанавливает базовую ширину элемента - ширину до того как будут высчитаны остальные условия 
								влияющие на ширину элемента. Значение можно указать в px, em, rem, %, vw, vh и т.д. Итоговая 
								ширина будет зависеть от базовой ширины и значений flex-grow, flex-shrink и контента внутри 
								блока. При auto элемент получает базовую ширину относительно контента внутри него.
---------------------------------------------------------------------------------------------------------------------------------
		Align-self:				-	Позволяет изменить свойство align-items, только для отдельного элемента.

			stretch:			-	элемент растягиваются заполняя строку полностью
			flex-start:			-	элемент прижимаются к началу строки
			flex-end:			-	элемент прижимаются к концу строки
			center:				-	элемент выравниваются по центру строки
			baseline:			-	элемент выравниваются по базовой линии текста
---------------------------------------------------------------------------------------------------------------------------------
		Order:					-	по умолчанию элементы имеют order: 0 и ставятся в порядке их появления в HTML коде и 
									направления ряда. Но если изменить значение свойства order, то элементы будут выстраиваться 
									в порядке значений: -1 0 1 2 3 .... Например если одному из элементов указать order: 1, 
									то сначала будут идти все нулевые, а потом элемент с 1.

---------------------------------------------------------------------------------------------------------------------------------

	Заметки

		Чем отличается flex-basis от width?
		-	flex-basis работает только для главной оси. Это значит что при flex-direction:row flex-basis контролирует ширину (width), 
		а при flex-direction:column контролирует высоту (height). Смотрите пример.
		-	flex-basis применяется только к flex элементам. А значит если отключить flex у контейнера это свойство не будет иметь эффекта.
		-	Абсолютные элементы контейнера не участвуют во flex конструкции... А значит, flex-basis не влияет на элементы flex контейнера,
		если они абсолютны position:absolute. Им нужно будет указать width / height.
		-	При использовании свойства flex 3 значения (flex-grow/flex-shrink/flex-basis) можно скомбинировать и записать коротко,
		а для width grow или shrink нужно писать отдельно. Например: flex:0 0 50% == width:50%; flex-shrink:0;. Иногда это просто 
		неудобно.
		-	По возможности все же отдавайте предпочтение flex-basis. Используйте width только когда не подходит flex-basis.

---------------------------------------------------------------------------------------------------------------------------------